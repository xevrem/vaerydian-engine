(undo-tree-save-format-version . 1)
"a0b2eaff8e5b161f4c28d33637038496ebecec52"
[nil nil nil nil (25137 59114 582308 0) 0 nil]
([nil nil ((apply -12 4385 4542 undo--wrap-and-run-primitive-undo 4385 4542 ((4531 . 4534) (4452 . 4455) (4433 . 4436) (4389 . 4392) 4395)) (t 25147 9067 341278 91000)) nil (25155 13648 753489 0) 0 nil])
([nil nil ((4589 . 4595) (4590 . 4594) (#("      " 0 6 (fontified nil)) . 4589) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (4593 . 4595) (4588 . 4594) (4587 . 4589) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket))) . -4587) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (4587 . 4588) (4583 . 4586) (4563 . 4583) (4546 . 4563) (4545 . 4547) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:keyword)) . -4545) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (4542 . 4546) (4537 . 4542)) nil (25155 13648 753487 0) 0 nil])
([nil nil ((4616 . 4617) (4614 . 4615) (4613 . 4615) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -4613) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (4610 . 4614) (#("d" 0 1 (fontified t face tree-sitter-hl-face:property)) . -4610) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) 4611 (4603 . 4611) (#("g" 0 1 (fontified t face tree-sitter-hl-face:property)) . -4603) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 4604 (4595 . 4604)) nil (25155 13648 753466 0) 0 nil])
([nil nil ((4595 . 4608)) nil (25155 13648 753280 0) 0 nil])
([nil nil ((#("let " 0 3 (fontified t face tree-sitter-hl-face:keyword) 3 4 (fontified t)) . 4595) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4)) nil (25155 13648 753277 0) 0 nil])
([nil nil ((4595 . 4601)) nil (25155 13648 753150 0) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -4633) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -6) (undo-tree-id8 . -6) (undo-tree-id9 . -6) (undo-tree-id10 . -6) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -6) (undo-tree-id15 . -6) (undo-tree-id16 . -6) (undo-tree-id17 . -6) (undo-tree-id18 . -6) (undo-tree-id19 . -6) (undo-tree-id20 . -6) (undo-tree-id21 . -6) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -6) (undo-tree-id44 . -6) (undo-tree-id45 . -6) (undo-tree-id46 . -6) (undo-tree-id47 . -6) (undo-tree-id48 . -6) (undo-tree-id49 . -6) (undo-tree-id50 . -6) (undo-tree-id51 . -6) (undo-tree-id52 . -6) (undo-tree-id53 . -6) (undo-tree-id54 . -6) (undo-tree-id55 . -6) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (undo-tree-id58 . -6) (undo-tree-id59 . -6) (undo-tree-id60 . -6) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -6) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -6) (undo-tree-id97 . -6) (undo-tree-id98 . -6) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -6) (undo-tree-id102 . -6) (undo-tree-id103 . -6) (undo-tree-id104 . -6) (undo-tree-id105 . -6) (undo-tree-id106 . -6) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -6) (undo-tree-id113 . -6) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) 4639 (4632 . 4639)) nil (25155 13648 753145 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4637 . 4638) (#("
" 0 1 (fontified nil)) . -4731) (4633 . 4732)) nil (25155 13648 752915 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4633) (undo-tree-id0 . -1)) nil (25155 13648 752912 0) 0 nil])
([nil nil ((apply 6 4633 4725 undo--wrap-and-run-primitive-undo 4633 4725 ((#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4653) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4637) 4633))) nil (25155 13648 752866 0) 0 nil])
([nil nil ((apply -3 4545 4590 undo--wrap-and-run-primitive-undo 4545 4590 ((4589 . 4590) (4587 . 4588) (4545 . 4546) 4633))) nil (25155 13648 752860 0) 0 nil])
([nil nil ((apply -15 4538 4753 undo--wrap-and-run-primitive-undo 4538 4753 ((4744 . 4747) (4665 . 4668) (4646 . 4649) (4599 . 4602) (4542 . 4545) 4548)) (t 25155 13648 760434 760000)) nil (25155 13746 213860 0) 0 nil])
([nil nil ((apply 12 4385 4526 undo--wrap-and-run-primitive-undo 4385 4526 ((#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4522) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4446) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4430) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4389) 4405))) nil (25155 13785 797197 0) 0 nil])
([nil nil ((apply 15 4526 4722 undo--wrap-and-run-primitive-undo 4526 4722 ((#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4720) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4644) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4628) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4584) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4530) 4543)) (t 25155 13746 219401 740000)) nil (25155 13793 6708 0) 0 nil] [nil nil ((4402 . 4403) (t 25155 13746 219401 740000)) ((#("c" 0 1 (fontified t face tree-sitter-hl-face:property)) . 4402)) (25155 13785 796382 0) 0 nil])
([nil nil ((apply -12 4385 4592 undo--wrap-and-run-primitive-undo 4385 4592 ((4531 . 4534) (4452 . 4455) (4433 . 4436) (4389 . 4392) 4399))) nil (25155 13793 6686 0) 0 nil])
nil
([nil nil ((4545 . 4557) (4544 . 4546) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:keyword)) . -4544) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (4542 . 4545) (4537 . 4542) (t 25155 13793 11282 980000)) nil (25155 13820 234698 0) 0 nil])
([nil nil ((4545 . 4546)) nil (25155 13820 234685 0) 0 nil])
([nil nil ((4559 . 4567)) nil (25155 13820 234684 0) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . 4702)) nil (25155 13820 234683 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t face tree-sitter-hl-face:punctuation\.delimiter)) . 4702)) nil (25155 13820 234679 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4681) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (t 25155 13820 239933 324000)) nil (25155 13828 792684 0) 0 nil])
([nil nil ((#("       " 0 3 (fontified t) 3 7 (fontified t)) . 4682)) nil (25155 13828 792680 0) 0 nil])
([nil nil ((#("    if(!this.process) return;
" 0 4 (fontified t) 4 6 (fontified t face tree-sitter-hl-face:keyword) 6 7 (fontified t face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket)) 7 8 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:operator)) 8 12 (fontified t face tree-sitter-hl-face:variable\.builtin) 12 13 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 13 20 (fontified t face tree-sitter-hl-face:property) 20 21 (fontified t face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket)) 21 22 (fontified t) 22 28 (fontified t face tree-sitter-hl-face:keyword) 28 29 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 29 30 (fontified t)) . 4538) (undo-tree-id583 . -16) (undo-tree-id584 . -6) (undo-tree-id585 . -6) (undo-tree-id586 . -16) (undo-tree-id587 . -16) (undo-tree-id588 . -16) (undo-tree-id589 . -16) (undo-tree-id590 . -16) (undo-tree-id591 . -16) (undo-tree-id592 . -16) (undo-tree-id593 . -16) (undo-tree-id594 . -16) (undo-tree-id595 . -16) (undo-tree-id596 . -16) (undo-tree-id597 . -16) (undo-tree-id598 . -16) (undo-tree-id599 . -16) (undo-tree-id600 . -16) (undo-tree-id601 . -16) (undo-tree-id602 . -16) (undo-tree-id603 . -16) (undo-tree-id604 . -16) (undo-tree-id605 . -16) (undo-tree-id606 . -16) (undo-tree-id607 . -16) (undo-tree-id608 . -16) (undo-tree-id609 . -16) (undo-tree-id610 . -16) (undo-tree-id611 . -16) 4554) nil (25155 13828 792679 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4388 . 4389) (#("
" 0 1 (fontified nil)) . -4414) (4384 . 4415) 4351) nil (25155 13828 792641 0) 0 nil])
([nil nil ((#("    if(!this.process) return;
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 6 (fontified t face tree-sitter-hl-face:keyword) 6 7 (fontified t face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket)) 7 8 (fontified t face (tree-sitter-hl-face:keyword tree-sitter-hl-face:operator)) 8 12 (fontified t face tree-sitter-hl-face:variable\.builtin) 12 13 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 13 20 (fontified t face tree-sitter-hl-face:property) 20 21 (fontified t face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket)) 21 22 (fontified t) 22 28 (fontified t face tree-sitter-hl-face:keyword) 28 29 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 29 30 (fontified t)) . 4385) (undo-tree-id427 . -4) (undo-tree-id428 . -29) (undo-tree-id429 . -29) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -4) (undo-tree-id486 . -4) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -6) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) 4389) nil (25155 13828 792636 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -4305) (4275 . 4306) 4234) nil (25155 13828 792417 0) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face tree-sitter-hl-face:comment)) . 4501) (t 25155 13828 796425 43000)) nil (25155 13832 871427 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t face tree-sitter-hl-face:comment)) . 4501)) nil (25155 13832 871421 0) 0 nil])
([nil nil ((apply -12 4566 4768 undo--wrap-and-run-primitive-undo 4566 4768 ((4759 . 4762) (4674 . 4677) (4627 . 4630) (4570 . 4573) 4580)) (t 25155 13832 874305 755000)) nil (25155 13904 57831 0) 0 nil])
([nil nil ((apply 12 4415 4554 undo--wrap-and-run-primitive-undo 4415 4554 ((#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4550) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4476) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4460) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4419) 4428))) nil (25155 13904 57827 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4471) (t 25155 13904 66011 607000)) nil (25155 13909 908658 0) 0 nil])
([nil nil ((#("       " 0 3 (fontified t) 3 7 (fontified t)) . 4472) (undo-tree-id614 . -7)) nil (25155 13909 908654 0) 0 nil])
([nil nil ((apply -8 4472 4481 undo--wrap-and-run-primitive-undo 4472 4481 ((4472 . 4480))) (apply -1 4282 4283 undo--wrap-and-run-primitive-undo 4282 4283 ((4282 . 4283) 4484)) (t 25155 13909 917185 386000)) nil (25155 13920 934787 0) 0 nil])
([nil nil ((apply -12 4416 4624 undo--wrap-and-run-primitive-undo 4416 4624 ((4560 . 4563) (4483 . 4486) (4464 . 4467) (4420 . 4423) 4435)) (t 25155 13920 937282 428000)) nil (25155 13995 172220 0) 0 nil])
([nil nil ((apply 12 4567 4753 undo--wrap-and-run-primitive-undo 4567 4753 ((#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4751) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4669) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4625) (#("// " 0 3 (fontified t face tree-sitter-hl-face:comment)) . -4571) 4589))) nil (25155 13995 172219 0) 0 nil])
([nil nil ((apply -8 4680 4689 undo--wrap-and-run-primitive-undo 4680 4689 ((4680 . 4688) 4586))) nil (25155 13995 172215 0) 0 nil])
([nil current ((#("    // given that bags when they grow contain sparse data,
    // using forEach in this scenario is superior
    // this._entities.forEach((entity) => {
    //   entity &&
    //     this.process(entity, this.query, this._ecsInstance.delta, state);
    // });
" 0 4 (fontified t) 4 58 (fontified t face tree-sitter-hl-face:comment) 58 63 (fontified t) 63 108 (fontified t face tree-sitter-hl-face:comment) 108 113 (fontified t) 113 152 (fontified t face tree-sitter-hl-face:comment) 152 157 (fontified t) 157 171 (fontified t face tree-sitter-hl-face:comment) 171 176 (fontified t) 176 248 (fontified t face tree-sitter-hl-face:comment) 248 253 (fontified t) 253 259 (fontified t face tree-sitter-hl-face:comment) 259 260 (fontified t)) . 4307) (undo-tree-id0 . -4) (undo-tree-id1 . -260) (undo-tree-id2 . -260) (undo-tree-id3 . -260) (undo-tree-id4 . -260) (undo-tree-id5 . -260) (undo-tree-id6 . -260) (undo-tree-id7 . -260) (undo-tree-id8 . -260) (undo-tree-id9 . -260) (undo-tree-id10 . -260) (undo-tree-id11 . -249) (undo-tree-id12 . -249) (undo-tree-id13 . -249) (undo-tree-id14 . -249) (undo-tree-id15 . -249) (undo-tree-id16 . -249) (undo-tree-id17 . -249) (undo-tree-id18 . -249) (undo-tree-id19 . -249) (undo-tree-id20 . -249) (undo-tree-id21 . -172) (undo-tree-id22 . -172) (undo-tree-id23 . -172) (undo-tree-id24 . -172) (undo-tree-id25 . -172) (undo-tree-id26 . -172) (undo-tree-id27 . -172) (undo-tree-id28 . -172) (undo-tree-id29 . -172) (undo-tree-id30 . -172) (undo-tree-id31 . -172) (undo-tree-id32 . -172) (undo-tree-id33 . -172) (undo-tree-id34 . -172) (undo-tree-id35 . -172) (undo-tree-id36 . -153) (undo-tree-id37 . -153) (undo-tree-id38 . -153) (undo-tree-id39 . -153) (undo-tree-id40 . -153) (undo-tree-id41 . -153) (undo-tree-id42 . -153) (undo-tree-id43 . -153) (undo-tree-id44 . -153) (undo-tree-id45 . -153) (undo-tree-id46 . -109) (undo-tree-id47 . -109) (undo-tree-id48 . -109) (undo-tree-id49 . -109) (undo-tree-id50 . -109) (undo-tree-id51 . -109) (undo-tree-id52 . -109) (undo-tree-id53 . -109) (undo-tree-id54 . -109) (undo-tree-id55 . -109) (undo-tree-id56 . -59) (undo-tree-id57 . -59) (undo-tree-id58 . -59) (undo-tree-id59 . -59) (undo-tree-id60 . -59) (undo-tree-id61 . -59) (undo-tree-id62 . -59) (undo-tree-id63 . -59) (undo-tree-id64 . -59) (undo-tree-id65 . -59) (undo-tree-id66 . -59) (undo-tree-id67 . -59) (undo-tree-id68 . -59) (undo-tree-id69 . -59) (undo-tree-id70 . -59) (undo-tree-id71 . -59) (undo-tree-id72 . -59) (undo-tree-id73 . -59) (undo-tree-id74 . -59) (undo-tree-id75 . -59) (undo-tree-id76 . -59) (undo-tree-id77 . -59) (undo-tree-id78 . -59) (undo-tree-id79 . -59) (undo-tree-id80 . -59) (undo-tree-id81 . -59) (undo-tree-id82 . -59) (undo-tree-id83 . -59) (undo-tree-id84 . -59) (undo-tree-id85 . -59) (undo-tree-id86 . -59) (undo-tree-id87 . -59) (undo-tree-id88 . -59) (undo-tree-id89 . -59) (undo-tree-id90 . -59) (undo-tree-id91 . -59) (undo-tree-id92 . -59) (undo-tree-id93 . -59) (undo-tree-id94 . -59) (undo-tree-id95 . -59) (undo-tree-id96 . -59) (undo-tree-id97 . -59) (undo-tree-id98 . -59) (undo-tree-id99 . -59) (undo-tree-id100 . -59) (undo-tree-id101 . -59) (undo-tree-id102 . -59) (undo-tree-id103 . -59) (undo-tree-id104 . -59) (undo-tree-id105 . -59) (undo-tree-id106 . -59) (undo-tree-id107 . -59) (undo-tree-id108 . -59) (undo-tree-id109 . -59) (undo-tree-id110 . -59) (undo-tree-id111 . -59) (undo-tree-id112 . -59) (undo-tree-id113 . -59) (undo-tree-id114 . -59) (undo-tree-id115 . -59) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) 4311 (t 25155 13995 180133 455000)) nil (25159 11234 889097 0) 0 nil])
nil
